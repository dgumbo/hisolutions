#############    Prepare Environment For Setup.    #############

## enable search history searches by page up/down
1. $ sudo nano /etc/inputrc
# uncomment lines below
# under	# alternate mappings for "page up" and "page down" to search the history
 	"\e[5~": history-search-backward
 	"\e[6~": history-search-forward

## update system with latest updates
2. $ sudo apt-get update && sudo apt-get upgrade

## install Java 8
3. $ sudo apt-get install default-jdk
   $ sudo add-apt-repository ppa:webupd8team/java
   $ sudo apt-get update
   $ sudo apt-get install oracle-java8-installer

   # check for java_home
   $ echo $JAVA_HOME

   $ sudo update-alternatives --config java
   $ sudo nano /etc/environment

   # set java home variable like below from alternatives above.
   # most likely path is:        JAVA_HOME="/usr/lib/jvm/java-8-oracle/jre/bin/java"
     JAVA_HOME=""

   # reload sources paths
   $ source /etc/environment

   # check for java_home
   $ echo $JAVA_HOME

## install Maven
4. $ sudo apt-get install maven

## install NodeJS latest >=v10 && Node Package Manager npm
5. $ curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
   $ sudo apt-get install -y nodejs
   $ sudo apt-get install -y build-essential

## install Node Package Manager npm
6. $ sudo npm install -g @angular/cli

## configure routing and port fowarding.
7. $ sudo iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080
8. $ sudo apt-get install iptables-persistent

9. $ sudo apt-get update && sudo apt-get upgrade
10. $ sudo reboot


##################     Setup the Application If Environment Ready      #####################

## clone project from git
1. $ git clone https://github.com/dgumbo/hisolutions.git 

## build angular project
2. $ cd hisolutions/frontend
   $ npm install
   $ npm rebuild node-sass
   $ ng build --prod
   $ cd ..

## browse to project target folder
3. $ sudo adduser his
     # use password : his

## create upload dir under user his directory
4. $ sudo mkdir /home/his/upload-dir

## increase mvn virtual memory
5. $ export _JAVA_OPTIONS="-Xms1024m -Xmx1024m -XX:MaxMetaspaceSize=512m"

## compile and buil project and check if project runs - backend project - using java -jar
6. $ mvn clean install -P production
   $ mvn clean package -P production --pl backend
   $ java -jar backend/target/hisolutions-backend-1.0.0.war

## prepare for the deployement of application
7. $ sudo systemctl stop hisolutions.service
   $ sudo systemctl disable hisolutions.service
   $ sudo mkdir /var/hisolutions
   $ sudo rm -rf /var/hisolutions/hisolutions-backend-1.0.0.war
   $ sudo cp backend/target/hisolutions-backend-1.0.0.war /var/hisolutions/
   $ sudo chown his:his /var/hisolutions/hisolutions-backend-1.0.0.war
   $ sudo chmod 500 /var/hisolutions/hisolutions-backend-1.0.0.war 


##  create service for the application
   $ sudo nano /etc/systemd/system/hisolutions.service
   # copy all content below

# Content Start
[Unit]
Description=HiSolutions Web App Service

[Service]
User=his
# The configuration file application.properties should be here:

#change this to your workspace
#WorkingDirectory=/home/ubuntu/var

#path to executable. 

#executable is a bash script which calls jar file
ExecStart=/usr/lib/jvm/java-8-oracle/jre/bin/java -jar /var/hisolutions/hisolutions-backend-1.0.0.war

SuccessExitStatus=143
TimeoutStopSec=10
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
# Content End


## 
$ sudo systemctl enable hisolutions.service
$ sudo systemctl start hisolutions.service
$ journalctl -u hisolutions.service -f

 

## upgrade all upgradable nodejs packages on development computer
#   $ npm install i -g npm-check-updates
#   $ ncu -u


